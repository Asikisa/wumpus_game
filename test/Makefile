# Builds "Wumpus the game" test app

##############################################################################

# Directories of the game

ROOTDIR = ../src/
LIBDIR = $(ROOTDIR)3rdparty/

##############################################################################

# Compiler settings

SRCFILES = $(wildcard *.cc)
CXX = g++
CXXFLAGS = -I $(ROOTDIR) -L $(LIBDIR) -lbass -ansi -pedantic -Wall -Wextra -std=c++14
CXXFLAGS += -MP -MD		# MD - only internal, MMD - with system
DBGFLAGS = -ggdb3 -DDEBUG -O0
RLSFLAGS = -O2
FLTKFLAGS = `fltk-config --use-images --ldflags`
BASSLIB = $(ROOTDIR)3rdparty/libbass.so
VPATH = $(ROOTDIR)
OBJECTS = test_cases.o test_helpers.o $(shell ls $(ROOTDIR)*.o)

##############################################################################

# Builds the game with OBJECTS

test : main.cc $(OBJECTS)
	make -C $(ROOTDIR) test-release
	$(CXX) $(CXXFLAGS) $(RLSFLAGS) $< $(OBJECTS) $(FLTKFLAGS) $(BASSLIB) -o $@

debug : main.cc $(OBJECTS)
	make -C $(ROOTDIR) test-debug
	$(CXX) $(CXXFLAGS) $(DBGFLAGS) $< $(OBJECTS) $(FLTKFLAGS) $(BASSLIB) -o test_$@

ifeq ($(MAKECMDGOALS), debug)
%.o : %.cc %.h
	$(CXX) $(CXXFLAGS) $(DBGFLAGS) -c $< -o $@
else
%.o : %.cc %.h
	$(CXX) $(CXXFLAGS) $(RLSFLAGS) -c $< -o $@
endif

#############################################################################

# Includes dependicies files early generated by g++ with -MP -MMD opts

-include $(SRCFILES:%.cc=%.d)

# Cleans the garbage

clean :
	rm -f *.out *.d *.o $(ROOTDIR)*.a $(ROOTDIR)*.d $(ROOTDIR)*.o
	rm -f test test_debug *.d *.o ~*.tmp