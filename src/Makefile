# Builds "Wumpus" game application

##############################################################################

# Directories of the game

ROOTDIR = ./
LIBDIR = $(ROOTDIR)3rdparty/

WDGDIR = $(ROOTDIR)gui/widgets/
ENTDIR = $(ROOTDIR)entities/
CFGDIR = $(ROOTDIR)settings/
CLIDIR = $(ROOTDIR)cli/
AIDIR  = $(ROOTDIR)ai/
GUIDIR = $(ROOTDIR)gui/
GUIHLP = $(GUIDIR)helpers/
FRMDIR = $(GUIDIR)forms/
HLPDIR = $(ENTDIR)helpers/
SCRDIR = $(ROOTDIR)scores/
AUDDIR = $(ROOTDIR)3rdparty/
MSCDIR = $(ROOTDIR)music/

VPATH = $(WDGDIR):$(CLIDIR):$(ENTDIR):$(CFGDIR):$(AIDIR):$(GUIDIR):\
				$(FRMDIR):$(HLPDIR):$(ENDDIR):$(GUIHLP):$(SCRDIR):$(AUDDIR):\
				$(MSCDIR)

##############################################################################

# Compiler settings

SRCFILES = $(wildcard *.cc)
CXX = g++
CXXFLAGS = -I $(ROOTDIR) -L $(LIBDIR) -lbass -ansi -pedantic -Wall -Wextra -std=c++14
CXXFLAGS += -MP -MD		# MD - only internal, MMD - with system
DBGFLAGS = -ggdb3 -DDEBUG -O0
RLSFLAGS = -O2
FLTKFLAGS = `fltk-config --use-images --ldflags`
BASSLIB = $(ROOTDIR)3rdparty/libbass.so
OBJECTS = map.o subject.o enemy.o room.o player.o bat.o pit.o wump.o \
					guide.o level.o logic.o helpers.o cli_view.o \
					cli_controller.o ai_controller.o gui_view.o gui_controller.o \
					windows.o form_start.o form_help.o form_main.o widget_info.o \
					widget_map.o widget_netdraw.o widget_player.o trajectory.o \
					scores.o config.o audio_out.o images.o math_helpers.o music.o

##############################################################################

# Builds the game with OBJECTS

ifeq ($(MAKECMDGOALS), debug)
%.o : %.cc %.h
	$(CXX) $(CXXFLAGS) $(DBGFLAGS) -c $< -o $@
else
  ifeq ($(MAKECMDGOALS), test-debug)
  %.o : %.cc %.h
	  $(CXX) $(CXXFLAGS) $(DBGFLAGS) -c $< -o $@
  else
  %.o : %.cc %.h
	  $(CXX) $(CXXFLAGS) $(RLSFLAGS) -c $< -o $@
  endif
endif

wumpus : main.cc $(OBJECTS) 
	$(CXX) $(CXXFLAGS) $(RLSFLAGS) $< $(OBJECTS) $(FLTKFLAGS) $(BASSLIB) -o $@

debug : main.cc $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(DBGFLAGS) $< $(OBJECTS) $(FLTKFLAGS) $(BASSLIB) -o wumpus_$@

test-release : $(OBJECTS)

test-debug : $(OBJECTS)

#############################################################################

# Includes dependicies files early generated by g++ with -MP -MMD opts

-include $(SRCFILES:%.cc=%.d)

# Cleans the garbage

clean :
	rm -f wumpus wumpus_debug *.d *.o